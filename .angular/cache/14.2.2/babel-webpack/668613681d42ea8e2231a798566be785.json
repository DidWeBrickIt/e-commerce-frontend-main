{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http) {\n      this.http = http;\n      this.productUrl = \"/api/product\";\n      this._cart = new BehaviorSubject({\n        cartCount: 0,\n        products: [],\n        totalPrice: 0.00\n      });\n      this._cart$ = this._cart.asObservable();\n    }\n\n    getCart() {\n      return this._cart$;\n    }\n\n    setCart(latestValue) {\n      return this._cart.next(latestValue);\n    }\n\n    getProducts() {\n      return this.http.get(environment.baseUrl + this.productUrl, {\n        headers: environment.headers,\n        withCredentials: environment.withCredentials\n      });\n    }\n\n    getSingleProduct(id) {\n      return this.http.get(environment.baseUrl + id);\n    }\n\n    purchase(products) {\n      const payload = JSON.stringify(products);\n      return this.http.patch(environment.baseUrl + this.productUrl, payload, {\n        headers: environment.headers,\n        withCredentials: environment.withCredentials\n      });\n    }\n\n  }\n\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}